openapi: 3.0.3
info:
  title: Swagger AmbrosiaPos
  description: |-
    This a swagger for AmbrosiaPos in this swagger you can try the different endpoint's
  termsOfService: https://github.com/btcgdl/Ambrosia-POS
  contact:
    email: guadalajarabitcoin@gmail.com
  license:
    name: MIT
    url: https://github.com/btcgdl/Ambrosia-POS?tab=MIT-1-ov-file
  version: ALPHA-0.0.1

servers:
  - url: http://0.0.0.0:5000
    description: Local development server

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Authenticates a user and establishes a session
      description: |-
        Authenticates a specific user within the application instance (by verifying credentials) 
        and establishes the current user's session state for this instance.

        **Required Authentication:**
        - HTTP Basic authentication with client token is MANDATORY
        - Username must be empty, password must be the client token
        - Click the "Authorize" button above and enter your client token in the password field
        - Leave username field empty

        This endpoint will return 403 if the client token is missing or invalid.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
            examples:
              example1:
                summary: Example login request
                value:
                  role: "admin"
                  password: "admin"
      responses:
        "200":
          description: Session successfully established
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginSuccessResponse"
              examples:
                example1:
                  summary: Example successful response for administrator
                  value:
                    message: "administrator session established"
                    id: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
                    role: "admin"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                example1:
                  summary: Example invalid credentials error
                  value:
                    message: "Invalid credentials"
        "403":
          description: |-
            Unauthorized API access. This occurs when:
            - Client token is missing from Authorization header
            - Client token is invalid or expired
            - Authorization header is malformed

            **Note:** HTTP Basic auth with client token is mandatory for this endpoint.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                example1:
                  summary: Example unauthorized access error
                  value:
                    message: "Unauthorized API access"
        "400":
          description: Bad request (malformed JSON or missing required fields)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                example1:
                  summary: Example bad request error
                  value:
                    message: "Invalid request format"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                example1:
                  summary: Example server error
                  value:
                    message: "Internal server error"

components:
  schemas:
    LoginRequest:
      type: object
      required:
        - role
        - password
      properties:
        role:
          type: string
          description: The role of the user attempting to login
          example: "admin"
          enum:
            - admin
            - user
            - moderator
        password:
          type: string
          description: The password for the specified role
          example: "admin"
          minLength: 1
      additionalProperties: false

    LoginSuccessResponse:
      type: object
      required:
        - message
        - id
        - role
      properties:
        message:
          type: string
          description: Success message indicating session establishment
          example: "administrator session established"
        id:
          type: string
          format: uuid
          description: Unique session identifier
          example: "a1b2c3d4-e5f6-7890-1234-567890abcdef"
        role:
          type: string
          description: The authenticated user's role
          example: "admin"
        expires_at:
          type: string
          format: date-time
          description: Session expiration timestamp (optional)
          example: "2024-12-31T23:59:59Z"
      additionalProperties: false

    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message describing what went wrong
          example: "Invalid credentials"
        code:
          type: string
          description: Error code for programmatic handling (optional)
          example: "AUTH_001"
        details:
          type: object
          description: Additional error details (optional)
          additionalProperties: true
      additionalProperties: false

tags:
  - name: auth
    description: Authentication and session management endpoints
